version: "3"

volumes:
  grafana : {}
  prometheus : {}
  prometheus_txt:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  monitors:

services:
  visualizer:
    # Stack Visualization Service
    image: dockersamples/visualizer:stable
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
    ports: 
      - "8090:8080"
    volumes: 
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks: 
      - monitors

  nodeexporter:
    image: prom/node-exporter:latest
    # pid: "host"
    user: root
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/run/prometheus'
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - prometheus:/prometheus
      - prometheus_txt:/run/prometheus:ro
    networks:
      - monitors

  dcgm_exporter:
    image: nvidia/dcgm-exporter:latest
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    volumes:
      - prometheus_txt:/run/prometheus
    networks:
      - monitors

  cadvisor:
    # container usage metrics
    image: google/cadvisor:latest
    command:
      - -docker_only
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]      
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks: 
      - monitors

  prometheus:
    # Metrics handling
    image: fgiuste/prometheus:latest #prom/prometheus:latest with default prometheus.yml preloaded
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes: 
      - "prometheus:/prometheus:rw"
    networks:
      - monitors